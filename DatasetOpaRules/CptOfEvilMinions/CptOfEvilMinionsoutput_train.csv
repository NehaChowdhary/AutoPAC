question,answer
Only global admins may read/write invites,"allow { 
object.type == ""invite"" 
subject.global_role == admin 
action == read 
} 
allow { 
object.type == ""invite"" 
subject.global_role == admin 
action == write 
} 
"
All users can read labels,"allow { 
object.type == ""label"" 
not is_null(subject) 
action == read 
} 
"
Only admins and maintainers can write queries,"allow { 
object.type == ""query"" 
subject.global_role == admin 
action == write 
} 
allow { 
object.type == ""query"" 
subject.global_role == maintainer 
action == write 
} 
"
Admin can write teams,"allow { 
object.type == ""team"" 
subject.global_role == admin 
action == write 
} 
"
Admins can read/write all,"allow { 
object.type == ""enroll_secret"" 
subject.global_role == admin 
action == [read, write][_] 
} 
"
Allow anyone to list (must be filtered appropriately by the service).,"allow { 
object.type == ""host"" 
not is_null(subject) 
action == list 
} 
"
Allow read/write for global admin/maintainer,"allow { 
object.type == ""host"" 
subject.global_role = admin 
action == [read, write][_] 
} 
allow { 
object.type == ""host"" 
subject.global_role = maintainer 
action == [read, write][_] 
} 
"
(Team) observers can run only if observers_can_run,"allow { 
object.type == ""query"" 
object.observer_can_run == true 
subject.global_role == observer 
action = run 
}"
filtered to only teams that they observe,"allow { 
object.type == ""query"" 
object.observer_can_run == true"
If role is maintainer on any team,"team_role(subject, subject.teams[_].id) == maintainer 
action == run 
} 
"
Allow read for global observer,"allow { 
object.type == ""host"" 
subject.global_role = observer 
action == read 
} 
"
Only global admins and maintainers can write labels,"allow { 
object.type == ""label"" 
subject.global_role == admin 
action == write 
} 
allow { 
object.type == ""label"" 
subject.global_role == maintainer 
action == write 
} 
"
Global admins and (team) maintainers can run any,"allow { 
object.type == ""query"" 
subject.global_role == admin 
action = run 
} 
allow { 
object.type == ""query"" 
subject.global_role == maintainer 
action = run 
}"
Any user can read other users,"allow { 
object.type == ""user"" 
not is_null(subject) 
action == read 
} 
"
If role is observer on any team,"team_role(subject, subject.teams[_].id) == observer 
action == run 
} 
"
All users can read activities,"allow { 
not is_null(subject) 
object.type == ""activity"" 
action == read 
} 
"
if the user has no explicit role for that team.,"team_role(subject, team_id) = role { 
subject_team := subject.teams[_] 
subject_team.id == team_id 
role := subject_team.role 
} 
"
Any user can write self (besides role),"allow { 
object.type == ""user"" 
object.id == subject.id 
action == write 
} 
"
Allow read for matching team maintainer/observer,"allow { 
object.type == ""host"" 
team_role(subject, object.team_id) == maintainer 
action == read 
} 
allow { 
object.type == ""host"" 
team_role(subject, object.team_id) == observer 
action == read 
} 
"
Only global admins can read/write carves,"allow { 
object.type == ""carve"" 
subject.global_role == admin 
action == [read, write][_] 
} 
"
Global Admin and Maintainer users can read and write policies,"allow { 
object.type == ""policy"" 
subject.global_role == admin 
action == [read, write][_] 
} 
 
allow { 
object.type == ""policy"" 
subject.global_role == maintainer 
action == [read, write][_] 
}"
Admins can read/write all user sessions,"allow { 
object.type == ""session"" 
subject.global_role == admin 
action == [read, write][_] 
} 
"
